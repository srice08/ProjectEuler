/*
 * Stephen L. Rice
 * ProjectEuler
 * December 24, 2013
 * 
 * Tests for Problem 8 class
 */

package test.problems;

import static org.junit.Assert.*;
import org.junit.Test;
import problems.P8;

public class P8Test
{
	//Test the Constructor
	@Test
	public void testP8()
	{
		P8 problem = new P8("12345");
		org.junit.Assert.assertEquals("12345", problem.getNumber());
	}
	
	//Test the basic solve method
	@Test
	public void testSolve()
	{
		//ProjectEuler Value
		P8 problem = new P8("7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450");
		problem.solve();
		org.junit.Assert.assertEquals(40824, problem.getLargestProduct());
		
		//Value with less than 5 digits
		problem = new P8("1234");
		problem.solve();
		org.junit.Assert.assertEquals(-1, problem.getLargestProduct());
		
		//Value with exactly 5 digits
		problem = new P8("12345");
		problem.solve();
		org.junit.Assert.assertEquals(120, problem.getLargestProduct());
	}
	
	//Test the old solve method
	@Test
	public void testSolveOld()
	{
		//ProjectEuler Value
		P8 problem = new P8("7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450");
		problem.solveOld();
		org.junit.Assert.assertEquals(40824, problem.getLargestProduct());
				
		//Value with less than 5 digits
		problem = new P8("1234");
		problem.solveOld();
		org.junit.Assert.assertEquals(-1, problem.getLargestProduct());
		
		//Value with exactly 5 digits
		problem = new P8("12345");
		problem.solveOld();
		org.junit.Assert.assertEquals(120, problem.getLargestProduct());
	}

	//Test the get solution method
	@Test
	public void testGetSolution()
	{
		//Normal Solve
		P8 problem = new P8("12345");
		problem.solve();
		org.junit.Assert.assertEquals("120", problem.getSolution());
		
		//Old Solve
		problem = new P8("12345");
		problem.solveOld();
		org.junit.Assert.assertEquals("120", problem.getSolution());
		
		
	}

}
