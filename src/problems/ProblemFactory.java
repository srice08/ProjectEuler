/*
	Stephen Rice
	ProjectEuler.net
	
	ProblemFactory.java: Static factory for generating problems
*/

package problems;

import java.util.List;
import java.util.ArrayList;

public class ProblemFactory
{
	//Create an return an instance of a problem with ProjectEuler numbers as input
	public static Problem getProblem(int probNum)
	{
		switch (probNum)
		{
			case 1:
				return new P1(1000);
			case 2:
				return new P2();
			case 3:
				return new P3(600851475143L);
			case 4:
				return new P4(999, 100);
			case 5:
				return new P5(1, 20);
			case 6:
				return new P6(100);
			case 7:
				return new P7(10001);
			case 8:
				return new P8("7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450");
			default:
				return null;
		}
	}
	
	//Return the number of solved problems
	public static List<Integer> getAllProblems()
	{
		List<Integer> problems = new ArrayList<Integer>();
		problems.add(new Integer(1));
		problems.add(new Integer(2));
		problems.add(new Integer(3));
		problems.add(new Integer(4));
		problems.add(new Integer(5));
		problems.add(new Integer(6));
		problems.add(new Integer(7));
		problems.add(new Integer(8));
		
		return problems;
	}
}