/*
	Stephen Rice
	ProjectEuler.net
	September 24, 2013
	
	
	Problem 2: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package problems;

public class P2 implements Problem
{
	long sum;
	long firstFib;
	long secFib;
	long newFib;
	
	//Set-up initial sum and fib numbers. Add 2 to the sum
	public P2()
	{
		sum = 0;
		firstFib = 1;
		secFib = 2;
		newFib = 0;
		
		sum += secFib;
	}
	
	//Given fib 1 = x, fib 2 = y, fib 3 = x + y, fib 4 = x + 2y, fib 5 = 2x + 3y. 
	//If fib 2 is even, then fib 5 will be the next even
	public void solve()
	{
		//Check to see if the next even fib is too big
		while((newFib = (2 * firstFib + 3 *secFib)) < 4000000)
		{
			//Add to sum, create new fibs
			sum += newFib;

			firstFib = firstFib + (2 * secFib);
			secFib = newFib;	
		}
		
	}
	
	//Return the solution as a string
	public String getSolution()
	{
		String solution = Long.toString(sum);
		
		return solution;
	}
}